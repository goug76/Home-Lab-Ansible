# ===============================================================================
# 🧠 Goug's HomeLab Ansible Playbook
# -------------------------------------------------------------------------------
# 📦 Playbook Name  : Proxmox Onboarding
# 🗓️ Run Schedule   : N/A
# 🔧 Description    : Sets up Proxmox with common setting like removing enterprise repos and addis the no-subscription repo
#                       and addis the no-subscription repo, installs common application, enables PCI passthrough, imports 
#                       SSH keys and removes Nag Message.
#
# 🔐 Required Secure Variables (do NOT store in GitHub):
#   - user               → The username that is being created
#   - pwd                → The matching password has to be hashed mkpasswd --method=sha-512
#   - ssh_key            → The user's SSH public key for logging in
#   - ansible_key        → The Ansible SSH public key for running playbooks on the server
#
# ✅ These must be provided via Ansible Vault, Semaphore Variables/Secrets, or CI/CD env vars.
# ❌ Never store actual values in this file or in version control.
#
# GitHub Repo  : https://github.com/goug76/Home-Lab-Ansible
# Maintainer   : John Goughenour
# ===============================================================================

---
- name: Proxmox Onboarding
  hosts: all

  pre_tasks:
    - name: Ensure required secrets are defined
      ansible.builtin.assert:
        that:
          - user is defined
          - pwd is defined
          - ssh_key is defined
          - ansible_key is defined
        fail_msg: >
          One or more required secrets are missing.
          Please define them using Ansible Vault or in your CI/CD environment.

  tasks:
    - name: Remove Proxmox Enterprise repositories
      ansible.builtin.lineinfile: 
        path: "{{item.path}}" 
        regexp: '^(.*)deb https://enterprise.proxmox.com(.*)$' 
        line: "{{item.line}}"
        backrefs: yes
      loop:
        - path: /etc/apt/sources.list.d/pve-enterprise.list
          line: '# deb https://enterprise.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-enterprise'
        - path: /etc/apt/sources.list.d/ceph.list
          line: '# deb https://enterprise.proxmox.com/debian/ceph-quincy {{ ansible_distribution_release }} enterprise'

    - name: Add Proxmox no-subscription repository
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list
        line: 'deb http://download.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-no-subscription'
        state: present
        
    - name: upgrade apt packages
      ansible.builtin.apt:
        upgrade: yes
        update_cache: yes

    - name: Install required system packages
      ansible.builtin.apt:
        pkg:
          - sudo
          - python3-proxmoxer
          - python3-requests
          - lshw
        update_cache: no
        cache_valid_time: 3600
        state: latest
    
    - name: Remove useless packages from the cache
      ansible.builtin.apt:
        autoclean: yes
        
    - name: Remove dependencies that are no longer required and purge their configuration files
      ansible.builtin.apt:
        autoremove: yes
        purge: true

    - name: create user
      ansible.builtin.user:
        name: "{{user}}"
        password: "{{pwd}}"
        groups: sudo
        state: present
        shell: /bin/bash
        system: no
        createhome: yes
        home: /home/{{user}}
    
    - name: add ssh key
      ansible.posix.authorized_key:
        user: "{{user}}"
        key: "{{ssh_key}}"
    
    - name: add Ansible ssh key
      ansible.posix.authorized_key:
        user: "{{user}}"
        key: "{{ansible_key}}"

    - name: enable pci pass-thur
      ansible.builtin.lineinfile: 
        path: /etc/default/grub 
        regexp: '^(.*)GRUB_CMDLINE_LINUX_DEFAULT(.*)$' 
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet intel_iommu=on"'
        backrefs: yes

    - name: add kernel modules for pci pass-thru
      ansible.builtin.lineinfile:
        path: /etc/modules
        line: "{{ item.line }}"
        state: present
      loop:
        - line: 'vfio'
        - line: 'vfio_iommu_type1'
        - line: 'vfio_pci'
        - line: 'vfio_virqfd'

    - name: Update GRUB
      ansible.builtin.shell:
        cmd: "{{item}}"
      loop:
        - update-grub
        - update-initramfs -u
        
    - name: remove nag message
      ansible.builtin.replace:
        path: /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
        regexp: "res === null \\|\\| res === undefined \\|\\| \\!res \\|\\| res\\n\\t\\t\\t.data.status.toLowerCase\\(\\) \\!== 'active'"
        replace: "false"
        backup: yes

    - name: Reboot PVE
      ansible.builtin.reboot:

    - name: turn off screen after 1 minute of inactivity
      ansible.builtin.shell:
        cmd: echo -ne "\033[9;1]" > /dev/tty1

# Password can't be plain text so run this command to hash it: mkpasswd --method=sha-512